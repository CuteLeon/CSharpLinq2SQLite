创建 .Net Core 项目

添加Nuget包：
    Microsoft.EntityFrameworkCore.Design
    Microsoft.EntityFrameworkCore.Sqlite
    Microsoft.EntityFrameworkCore.Tools.DotNet
	* Microsoft.EntityFrameworkCore.Tools.DotNet 提示不兼容的解决方案：
	打开 {项目}.csproj 文件
	——————
	<ItemGroup>
		<!-- 手动加入一行 -->
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.1.0-preview1-final" />
	</ItemGroup>
	——————
	重新加载项目

创建数据库交互类和模型实体类
————————————————
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;

namespace DotNetCoreLinq2SQLite.Models
{
    public class CoreSQLiteDBContext:DbContext
    {
        public DbSet<Blog> Blogs { get; set; }

        public DbSet<Post> Posts { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlite("Data Source=CoreSQLiteDB.db");
        }
    }

    public class Blog
    {
        public int BlogId { get; set; }
        public string Url { get; set; }

        public List<Post> Posts { get; set; }
    }

    public class Post
    {
        public int PostId { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }

        public int BlogId { get; set; }
        public Blog Blog { get; set; }
    }
}
————————————————

使用EFTool自动迁移数据库
数据库路径：DbContext.OnConfiguring(DbContextOptionsBuilder)方法参数所指定
命令：
cd 进入当前项目目录
dotnet ef migrations add InitialCreate
dotnet ef database update

或直接在项目目录内运行 EFCoreMigration.bat 文件

应用
把生成的数据库文件加入项目或复制到相应的生成目录
CoreSQLiteDBContext DBContext = new CoreSQLiteDBContext();
DBContext.SaveChanges();